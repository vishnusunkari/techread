{"componentChunkName":"component---src-templates-docs-js","path":"/aws/02-aws-config","result":{"data":{"site":{"siteMetadata":{"title":"TechGry","docsLocation":""}},"mdx":{"fields":{"id":"cc5a8341-9516-508b-be40-aed694a97130","title":"AWS Config","slug":"/aws/02-aws-config"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS Config\",\n  \"metaTitle\": \"AWS Config\",\n  \"metaDescription\": \"What is AWS Config? A log of all configuration changes to AWS resources.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"AWS Config (Configuration Logs for Monitoring, Compliance)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A log of all configuration changes to AWS resources.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is a paid service. When you enable AWS Config, it records a detailed view of the\\nconfiguration of AWS resources(EC2, EBS, SGs, VPC etc). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Default settings is to monitor per region. You can change it to global resources as well.\\nPuts all the config snapshots in S3, you can customize the bucket names with prefix etc\\nand it will put all in a folder called: prefix/AWSLogs/12341234123/Config/${region-name)bucketname  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Config Recorder is not real time.   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To stream config changes, use AWS Config along with SNS.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integrates to CloudTrail with permission. \")), mdx(\"h3\", null, \"Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Evaluate resource configs for desired settings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Identify usage/change in config over time - current & historical.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configuration Timeline.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Relationships of a resource with other resources.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add Config rules to report COMPLIANCE : 2 types\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"AWS Managed rules\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"User created rules \")))), mdx(\"p\", null, \"Q. How to check if Running EC2 instances are using specific AMIs?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"A. Use an AWS Config Managed Rule and specify a list of approved AMI IDs. This rule will check\\nwhether RUNNING EC2 instances are using specified AMIs. Configure AWS Config to stream configuration\\nchanges and notifications to an Amazon SNS topic which will send a notification for non-compliant\\ninstances.   \"), mdx(\"p\", null, \"Q. How to make sure a yet to be created EC2 instance should be using latest AMI?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"A. For checking latest AMI IDs before creation, use AWS Systems Manager's Parameter Store along\\nwith CloudFormation.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#aws-config-configuration-logs-for-monitoring-compliance","title":"AWS Config (Configuration Logs for Monitoring, Compliance)"},{"url":"#features","title":"Features"}]},"parent":{"__typename":"File","relativePath":"aws/02-aws-config.md"},"frontmatter":{"metaTitle":"AWS Config","metaDescription":"What is AWS Config? A log of all configuration changes to AWS resources."}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/concepts","title":"RealWorld Concepts"}}},{"node":{"fields":{"slug":"/aws","title":"AWS"}}},{"node":{"fields":{"slug":"/java","title":"Java"}}},{"node":{"fields":{"slug":"/kafka","title":"Kafka Concepts"}}},{"node":{"fields":{"slug":"/pages/about-me","title":"Vishnu Sunkari"}}},{"node":{"fields":{"slug":"/pages/about","title":"About TechGry"}}},{"node":{"fields":{"slug":"/pages/disclaimer","title":"Disclaimer"}}},{"node":{"fields":{"slug":"/pages/privacypolicy","title":"Privacy Policy"}}},{"node":{"fields":{"slug":"/pages/terms-and-conditions","title":"Terms and Conditions"}}},{"node":{"fields":{"slug":"/kafka/03-kafka-producers","title":"Producers"}}},{"node":{"fields":{"slug":"/kafka/01-kafka-topics-partitions-offsets","title":"Topics,Partitions & Offsets"}}},{"node":{"fields":{"slug":"/kafka/04-kafka-consumers","title":"Kafka Consumers"}}},{"node":{"fields":{"slug":"/kafka/05-kafka-consumer-offsets-delivery","title":"Consumer Offsets and Delivery Semantics"}}},{"node":{"fields":{"slug":"/kafka/02-kafka-brokers","title":"Brokers"}}},{"node":{"fields":{"slug":"/kafka/06-kafka-broker-discovery-zookeeper","title":"Kafka Broker Discovery and Zookeeper"}}},{"node":{"fields":{"slug":"/kafka/00-what-is-kafka","title":"What is Kafka"}}},{"node":{"fields":{"slug":"/kafka/07-kafka-guarantees","title":"Kafka Guarantees"}}},{"node":{"fields":{"slug":"/kafka/08-kafka-concepts-summary","title":"Kafka Concepts Summary"}}},{"node":{"fields":{"slug":"/kafka/09-kafka-how-to-build-distributed-scalable-system","title":"How to build distributed scalable system with Kafka"}}},{"node":{"fields":{"slug":"/java/00-java-classloaders","title":"Java ClassLoaders"}}},{"node":{"fields":{"slug":"/java/01-java-functional-programming","title":"Functional Programming"}}},{"node":{"fields":{"slug":"/concepts/00-rotation-strategy","title":"Rotate Monthly"}}},{"node":{"fields":{"slug":"/concepts/03-access-spring-beans","title":"Spring Beans"}}},{"node":{"fields":{"slug":"/concepts/01-apis-security","title":"API Security"}}},{"node":{"fields":{"slug":"/concepts/02-maxLifetime","title":"Fix HikariPool"}}},{"node":{"fields":{"slug":"/aws/00-aws-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/aws/01-aws-organizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/aws/02-aws-config","title":"AWS Config"}}},{"node":{"fields":{"slug":"/aws/03-aws-service-catalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/aws/04-aws-systems-manager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/aws/05-aws-elastic-load-balancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/aws/06-aws-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/aws/07-aws-placement-groups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/aws/08-aws-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/aws/09-aws-route53","title":"Route53"}}},{"node":{"fields":{"slug":"/aws/10-aws-s3","title":"S3"}}},{"node":{"fields":{"slug":"/aws/12-aws-rdsaurora","title":"RDS Aurora"}}},{"node":{"fields":{"slug":"/aws/13-aws-cloudformation","title":"CloudFormation"}}},{"node":{"fields":{"slug":"/aws/11-aws-efs","title":"EFS"}}},{"node":{"fields":{"slug":"/aws/14-aws-opsworks","title":"OpsWorks"}}},{"node":{"fields":{"slug":"/aws/15-aws-elasticbeanstalk","title":"Elastic Beanstalk"}}},{"node":{"fields":{"slug":"/concepts/04-save-queue-data-on-to-disk","title":"Saving Queue Data on to Disk"}}},{"node":{"fields":{"slug":"/kubernetes","title":"Kubernetes Concepts"}}},{"node":{"fields":{"slug":"/","title":"Technology Learning"}}},{"node":{"fields":{"slug":"/kubernetes/01-more-pods-on-nodes","title":"How to deploy more pods on kubernetes nodes"}}}]}},"pageContext":{"id":"cc5a8341-9516-508b-be40-aed694a97130"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}