{"componentChunkName":"component---src-templates-docs-js","path":"/aws/13-aws-cloudformation","result":{"data":{"site":{"siteMetadata":{"title":"TechGry","docsLocation":""}},"mdx":{"fields":{"id":"17cdba4d-a668-5db4-bcb0-6212c6cea3af","title":"CloudFormation","slug":"/aws/13-aws-cloudformation"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CloudFormation\",\n  \"metaTitle\": \"CloudFormation\",\n  \"metaDescription\": \"What is AWS CloudFormation? Template Portability and Reuse, Cross stack references,  Nested Stacks, Stack Roles, Stack Sets, Custom Resources,  CloudFormer\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"CloudFormation (Infrastructure as a Service)\"), mdx(\"p\", null, \"JSON or YAML\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Base entity : Stacks tied with resources for creation, update, deletion\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Required: Resource definition  \"), mdx(\"h3\", null, \"Template Portability and Reuse\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parameters with default values or no parameters at all\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pull the values from System Manager Parameter Store\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pseudo Parameters (eg:  AWS::Region, Partition, StackId, StackName, URLSuffix etc) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intrinsic Functions (eg: Fn::GetAZs, Fn::ImportValue, Ref etc)\")), mdx(\"h3\", null, \"Cross stack references\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Base Infrastructure values like VPCId, subnets, can be referenced in other stacks  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using Ref, Export, Fn::ImportValue  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reuse Stacks  \")), mdx(\"h3\", null, \"Nested Stacks\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reuse blocks of CloudFormation templates.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reuse same template code but create multiple different stacks with the same template.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Share outputs with parameters between these stacks using nested stacks.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"eg: GetAtt 'VPCStack.Outputs.VPCID'\")), mdx(\"h3\", null, \"Stack Roles\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allows anyone to use CloudFormation provision,update delete based on the roles permissions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allows separate security rules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Its IAM Role -> AWS Service -> CloudFormation Role \")), mdx(\"h3\", null, \"Stack Sets\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Administrator Account and a Target Account\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow you to deploy a cloudformation template into multiple regions or \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple regions in multiple accounts at the same time.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You need to establish a trust between these accounts by creating 2 roles:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWSCloudFormationStackSetAdminRole in Admin Account and \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWSCloudFormationStackSetExecutionRole in Target Account.\\neg: Enable cloudtrail across multiple accounts, enable mfa accross multiple accounts etc.\")), mdx(\"h3\", null, \"Custom Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom Resource in CloudFormation Template.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Used in scenarios when you want to build Hybrid Infrastructure (Both AWS and Outside AWS)\\n(eg: Retrieve a license key to activate)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CloudFormation Sends a notification event to a lambda or SNS topic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define   \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom::AMIInfo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ServiceToken : { } is the endpoint of lambda or SNS topic\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Receives Response on a pre-signed S3 URL   \")), mdx(\"p\", null, \"CloudFormer tool is used to create CloudFormation template files from existing stack.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"CloudFormation can be used as one of the Disaster Recovery Strategies.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#cloudformation-infrastructure-as-a-service","title":"CloudFormation (Infrastructure as a Service)"},{"url":"#template-portability-and-reuse","title":"Template Portability and Reuse"},{"url":"#cross-stack-references","title":"Cross stack references"},{"url":"#nested-stacks","title":"Nested Stacks"},{"url":"#stack-roles","title":"Stack Roles"},{"url":"#stack-sets","title":"Stack Sets"},{"url":"#custom-resources","title":"Custom Resources"}]},"parent":{"__typename":"File","relativePath":"aws/13-aws-cloudformation.mdx"},"frontmatter":{"metaTitle":"CloudFormation","metaDescription":"What is AWS CloudFormation? Template Portability and Reuse, Cross stack references,  Nested Stacks, Stack Roles, Stack Sets, Custom Resources,  CloudFormer"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/concepts","title":"RealWorld Concepts"}}},{"node":{"fields":{"slug":"/java","title":"Java"}}},{"node":{"fields":{"slug":"/aws","title":"AWS"}}},{"node":{"fields":{"slug":"/kafka","title":"Kafka Concepts"}}},{"node":{"fields":{"slug":"/kubernetes","title":"Kubernetes Concepts"}}},{"node":{"fields":{"slug":"/pages/about","title":"About TechGry"}}},{"node":{"fields":{"slug":"/pages/terms-and-conditions","title":"Terms and Conditions"}}},{"node":{"fields":{"slug":"/pages/about-me","title":"Vishnu Sunkari"}}},{"node":{"fields":{"slug":"/pages/disclaimer","title":"Disclaimer"}}},{"node":{"fields":{"slug":"/kafka/00-what-is-kafka","title":"What is Kafka"}}},{"node":{"fields":{"slug":"/pages/privacypolicy","title":"Privacy Policy"}}},{"node":{"fields":{"slug":"/kafka/02-kafka-brokers","title":"Brokers"}}},{"node":{"fields":{"slug":"/kubernetes/01-more-pods-on-nodes","title":"How to deploy more pods on kubernetes nodes"}}},{"node":{"fields":{"slug":"/kafka/03-kafka-producers","title":"Producers"}}},{"node":{"fields":{"slug":"/kafka/04-kafka-consumers","title":"Kafka Consumers"}}},{"node":{"fields":{"slug":"/kafka/01-kafka-topics-partitions-offsets","title":"Topics,Partitions & Offsets"}}},{"node":{"fields":{"slug":"/kafka/05-kafka-consumer-offsets-delivery","title":"Consumer Offsets and Delivery Semantics"}}},{"node":{"fields":{"slug":"/kafka/09-kafka-how-to-build-distributed-scalable-system","title":"How to build distributed scalable system with Kafka"}}},{"node":{"fields":{"slug":"/kafka/07-kafka-guarantees","title":"Kafka Guarantees"}}},{"node":{"fields":{"slug":"/kafka/08-kafka-concepts-summary","title":"Kafka Concepts Summary"}}},{"node":{"fields":{"slug":"/java/01-java-functional-programming","title":"Functional Programming"}}},{"node":{"fields":{"slug":"/kafka/06-kafka-broker-discovery-zookeeper","title":"Kafka Broker Discovery and Zookeeper"}}},{"node":{"fields":{"slug":"/java/00-java-classloaders","title":"Java ClassLoaders"}}},{"node":{"fields":{"slug":"/concepts/00-rotation-strategy","title":"Rotate Monthly"}}},{"node":{"fields":{"slug":"/concepts/01-apis-security","title":"API Security"}}},{"node":{"fields":{"slug":"/concepts/02-maxLifetime","title":"Fix HikariPool"}}},{"node":{"fields":{"slug":"/concepts/03-access-spring-beans","title":"Spring Beans"}}},{"node":{"fields":{"slug":"/concepts/04-save-queue-data-on-to-disk","title":"Saving Queue Data on to Disk"}}},{"node":{"fields":{"slug":"/aws/01-aws-organizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/aws/03-aws-service-catalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/aws/04-aws-systems-manager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/aws/00-aws-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/aws/02-aws-config","title":"AWS Config"}}},{"node":{"fields":{"slug":"/aws/05-aws-elastic-load-balancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/aws/06-aws-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/aws/07-aws-placement-groups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/aws/08-aws-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/aws/09-aws-route53","title":"Route53"}}},{"node":{"fields":{"slug":"/aws/10-aws-s3","title":"S3"}}},{"node":{"fields":{"slug":"/aws/11-aws-efs","title":"EFS"}}},{"node":{"fields":{"slug":"/aws/15-aws-elasticbeanstalk","title":"Elastic Beanstalk"}}},{"node":{"fields":{"slug":"/aws/14-aws-opsworks","title":"OpsWorks"}}},{"node":{"fields":{"slug":"/aws/13-aws-cloudformation","title":"CloudFormation"}}},{"node":{"fields":{"slug":"/aws/12-aws-rdsaurora","title":"RDS Aurora"}}},{"node":{"fields":{"slug":"/security","title":"Security"}}},{"node":{"fields":{"slug":"/security/01-aws-private-ca-private-key","title":"AWS Private CA Private Key"}}},{"node":{"fields":{"slug":"/","title":"Technology Learning"}}},{"node":{"fields":{"slug":"/kubernetes/02-kubecost-integration-with-kubernetes","title":"What is Kubecost and how to integrate kubecost with kubernetes"}}}]}},"pageContext":{"id":"17cdba4d-a668-5db4-bcb0-6212c6cea3af"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}