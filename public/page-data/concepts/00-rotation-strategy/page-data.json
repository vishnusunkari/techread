{"componentChunkName":"component---src-templates-docs-js","path":"/concepts/00-rotation-strategy","result":{"data":{"site":{"siteMetadata":{"title":"TechGry","docsLocation":""}},"mdx":{"fields":{"id":"b11b74a6-911e-5336-acee-16c4a276cc48","title":"Rotate Monthly","slug":"/concepts/00-rotation-strategy"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rotate Monthly\",\n  \"metaTitle\": \"How to pick a different item daily, weekly or monthly\",\n  \"metaDescription\": \"How to pick a different item from a collection to display on your website daily, weekly or monthly based on a rotation strategy\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"How to Pick an item from a collection based on a Rotation Strategy Weekly or Monthly\"), mdx(\"p\", null, \"Lets say you have a requirement to display a unique url link every month or week from a collection of url links.\\nFor eg: If you have a collection of 4 url links and you want to pick 1 every month.    \"), mdx(\"p\", null, \"January  -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink1.com\"\n  }, \"www.urllink1.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"February -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink2.com\"\n  }, \"www.urllink2.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"March -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink3.com\"\n  }, \"www.urllink3.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"April -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink1.com\"\n  }, \"www.urllink1.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"May -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink2.com\"\n  }, \"www.urllink2.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"..\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"November -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllin2.com\"\n  }, \"www.urllin2.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"December -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink3.com\"\n  }, \"www.urllink3.com\"), \"    \"), mdx(\"p\", null, \"or     \"), mdx(\"p\", null, \"week1 of the year -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink1.com\"\n  }, \"www.urllink1.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"week2 of the year -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink2.com\"\n  }, \"www.urllink2.com\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"..\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"week5 of the year -> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.urllink1.com\"\n  }, \"www.urllink1.com\"), \"    \"), mdx(\"p\", null, \"Following is one better way in java that you can implement using enums.  Create an enum class as below\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"package com.concepts.techgry;\\n\\nimport java.util.Calendar;\\nimport java.util.List;\\n\\nimport static org.apache.commons.collections.CollectionUtils.isEmpty;\\n/*\\n * @author http://www.techgry.com\\n * @created 02/02/2021\\n * Purpose : To pick a unique item from a given list per month\\n *  or per week based on rotation strategy.\\n *  NOTE: Calendar.MONTH is zero indexed\\n *        Calendar.WEEK_OF_YEAR is 1 indexed\\n */\\npublic enum RotationStrategyEnum {\\n\\n    WEEKLY(Calendar.getInstance().get((Calendar.WEEK_OF_YEAR) - 1)),\\n    MONTHLY(Calendar.getInstance().get((Calendar.MONTH)));\\n    int strategyIdx;\\n\\n    RotationStrategyEnum(int strategyIdx) {\\n        this.strategyIdx = strategyIdx;\\n    }\\n\\n    /*\\n     * Based on the int value of month/week, month % listSize\\n     *  will always give you an index within the list which is unique per month/week\\n     *  eg : listSize=4, January  = 0, 0%4 =0, idx=0;\\n     *       listSize=4, February = 1, 1%4 =1, idx=1;\\n     * Same logic applies to int value of week in an year when strategy is WEEKLY\\n     */\\n    public <T> T getItem(List<T> list) {\\n        if(isEmpty(list)) return null;\\n        int idx = this.strategyIdx % list.size();\\n        return list.get(idx);\\n    }\\n}\\n\\n\")), mdx(\"p\", null, \"Now from client code you can pass the collection to the enum as follows and get\\na unique item from an collection of objects.  Since the RotationStrategyEnum above\\nis using generics, you are not restricted for only strings but you can pretty much\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"pass any type of collection to the enum to  get a unique item from that collection\\nbased on RotationStrategy Weekly or Monthly.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"List<String> collection = new ArrayList(Arrays.asList( \\\"www.link1.com\\\" , \\\"www.link2.com\\\" , \\\"www.link3.com\\\" ) \\nString monthlyUniqueUrlLink = RotationStrategyEnum.MONTHLY.getItem(collection);\\nString weeklyUniqueUrlLink = RotationStrategyEnum.WEEKLY.getItem(collection);\\n\\n\")), mdx(\"p\", null, \"Now you can pass the above links monthlyUniqueUrlLink or weeklyUniqueUrlLink to your front-end\\nso you can display a unique rotated link based on the Rotation Strategy.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-to-pick-an-item-from-a-collection-based-on-a-rotation-strategy-weekly-or-monthly","title":"How to Pick an item from a collection based on a Rotation Strategy Weekly or Monthly"}]},"parent":{"__typename":"File","relativePath":"concepts/00-rotation-strategy.mdx"},"frontmatter":{"metaTitle":"How to pick a different item daily, weekly or monthly","metaDescription":"How to pick a different item from a collection to display on your website daily, weekly or monthly based on a rotation strategy"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/concepts","title":"RealWorld Concepts"}}},{"node":{"fields":{"slug":"/java","title":"Java"}}},{"node":{"fields":{"slug":"/aws","title":"AWS"}}},{"node":{"fields":{"slug":"/","title":"Technology Learning"}}},{"node":{"fields":{"slug":"/kafka","title":"Kafka Concepts"}}},{"node":{"fields":{"slug":"/kubernetes","title":"Kubernetes Concepts"}}},{"node":{"fields":{"slug":"/pages/about","title":"About TechGry"}}},{"node":{"fields":{"slug":"/pages/terms-and-conditions","title":"Terms and Conditions"}}},{"node":{"fields":{"slug":"/pages/about-me","title":"Vishnu Sunkari"}}},{"node":{"fields":{"slug":"/pages/disclaimer","title":"Disclaimer"}}},{"node":{"fields":{"slug":"/kafka/00-what-is-kafka","title":"What is Kafka"}}},{"node":{"fields":{"slug":"/pages/privacypolicy","title":"Privacy Policy"}}},{"node":{"fields":{"slug":"/kafka/02-kafka-brokers","title":"Brokers"}}},{"node":{"fields":{"slug":"/kubernetes/01-more-pods-on-nodes","title":"How to deploy more pods on kubernetes nodes"}}},{"node":{"fields":{"slug":"/kafka/03-kafka-producers","title":"Producers"}}},{"node":{"fields":{"slug":"/kafka/04-kafka-consumers","title":"Kafka Consumers"}}},{"node":{"fields":{"slug":"/kafka/01-kafka-topics-partitions-offsets","title":"Topics,Partitions & Offsets"}}},{"node":{"fields":{"slug":"/kafka/05-kafka-consumer-offsets-delivery","title":"Consumer Offsets and Delivery Semantics"}}},{"node":{"fields":{"slug":"/kafka/09-kafka-how-to-build-distributed-scalable-system","title":"How to build distributed scalable system with Kafka"}}},{"node":{"fields":{"slug":"/kafka/07-kafka-guarantees","title":"Kafka Guarantees"}}},{"node":{"fields":{"slug":"/kafka/08-kafka-concepts-summary","title":"Kafka Concepts Summary"}}},{"node":{"fields":{"slug":"/java/01-java-functional-programming","title":"Functional Programming"}}},{"node":{"fields":{"slug":"/kafka/06-kafka-broker-discovery-zookeeper","title":"Kafka Broker Discovery and Zookeeper"}}},{"node":{"fields":{"slug":"/java/00-java-classloaders","title":"Java ClassLoaders"}}},{"node":{"fields":{"slug":"/concepts/00-rotation-strategy","title":"Rotate Monthly"}}},{"node":{"fields":{"slug":"/concepts/01-apis-security","title":"API Security"}}},{"node":{"fields":{"slug":"/concepts/02-maxLifetime","title":"Fix HikariPool"}}},{"node":{"fields":{"slug":"/concepts/03-access-spring-beans","title":"Spring Beans"}}},{"node":{"fields":{"slug":"/concepts/04-save-queue-data-on-to-disk","title":"Saving Queue Data on to Disk"}}},{"node":{"fields":{"slug":"/aws/01-aws-organizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/aws/03-aws-service-catalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/aws/04-aws-systems-manager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/aws/00-aws-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/aws/02-aws-config","title":"AWS Config"}}},{"node":{"fields":{"slug":"/aws/05-aws-elastic-load-balancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/aws/06-aws-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/aws/07-aws-placement-groups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/aws/08-aws-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/aws/09-aws-route53","title":"Route53"}}},{"node":{"fields":{"slug":"/aws/10-aws-s3","title":"S3"}}},{"node":{"fields":{"slug":"/aws/11-aws-efs","title":"EFS"}}},{"node":{"fields":{"slug":"/aws/15-aws-elasticbeanstalk","title":"Elastic Beanstalk"}}},{"node":{"fields":{"slug":"/aws/14-aws-opsworks","title":"OpsWorks"}}},{"node":{"fields":{"slug":"/aws/13-aws-cloudformation","title":"CloudFormation"}}},{"node":{"fields":{"slug":"/aws/12-aws-rdsaurora","title":"RDS Aurora"}}},{"node":{"fields":{"slug":"/security","title":"Security"}}}]}},"pageContext":{"id":"b11b74a6-911e-5336-acee-16c4a276cc48"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}